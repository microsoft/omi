%Variables
pam_dir_passwd_redhat: 'auth include system-auth\n account required pam_nologin.so\n account include system-auth'
pam_dir_passwd_suse:   'auth include common-auth\n auth required pam_nologin.so\n account include common-account'
pam_dir_passwd_ubuntu: 'auth required pam_env.so\n auth required pam_unix.so nullok_secure\n account required pam_unix.so\n session required pam_limits.so'

pam_file_passwd_redhat: 'omi auth include system-auth\nomi account required pam_nologin.so\nomi account include system-auth'
pam_file_passwd_suse:   'omi auth include common-auth\nomi auth required pam_nologin.so\nomi account include common-account'
pam_file_passwd_ubuntu: 'omi auth required pam_env.so\nomi auth required pam_unix.so nullok_secure\nomi account required pam_unix.so\nomi session required pam_limits.so'

%Defines
ULINUX

%Files
/etc/init.d/omiserverd;	../../installbuilder/service_scripts/omiserverd.ulinux; 744; root; root

%Postinstall_30
# CreateOpenSSLLinks exists in two places: in the OMI ULinux data files and CM's install script. It creates links in 
# any given directory to the install system's ssl and crypto libraries (in case they have slightly different names) 
# so that our libraries and programs will be able to load them.
#
# \params $1 the directory to create these symbolic links
CreateOpenSSLLinks()
{
    SSL_VERSION=`openssl version | awk '{print $2}'`
    case "$SSL_VERSION" in
	0.9.8*)
	    LIB_SUFFIX="0.9.8"
	    ;;
	1.0.*)
	    LIB_SUFFIX="1.0.0"
	    ;;
	*)
	    echo "Error: OpenSSL version '${SSL_VERSION}' is not supported. Only OpenSSL versions 0.9.8* and 1.0.* are supported."
	    exit 1
	    ;;
    esac

    OPENSSL_PATH=`which openssl`
    LIBSSL_PATH=`ldd ${OPENSSL_PATH} | grep libssl.so | awk '{print $3}'`
    if [ $? -ne 0 ]; then
	echo "Error: Unable to determine libssl.so path."
	exit 1
    fi
    LIBCRYPTO_PATH=`ldd ${OPENSSL_PATH} | grep libcrypto.so | awk '{print $3}'`
    if [ $? -ne 0 ]; then
	echo "Error: Unable to determine libcrypto.so path."
	exit 1
    fi

    ln -s ${LIBSSL_PATH} $1/libssl.so.${LIB_SUFFIX}
    ln -s ${LIBCRYPTO_PATH} $1/libcrypto.so.${LIB_SUFFIX}
}

CreateOpenSSLLinks /opt/microsoft/omi/lib
