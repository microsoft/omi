// Copyright (c) 2006 DMTF.  All rights reserved.
// <change cr="WIPCR00321.001" type="add">Add CIM_AccountCapabilities
// </change>
// ==================================================================
//  CIM_AccountCapabilities
// ==================================================================
   [Experimental, Version ( "2.14.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "AccountCapabilities describes the capabilities supported for "
       "managing an Account." )]
class CIM_AccountCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "PasswordHistory indicates the maximum number of previous "
          "passwords that may be maintained for the Account. A "
          "value of zero shall indicate the maintaining of the "
          "password history for the account is not supported." )]
   uint16 PasswordHistory;

      [Description ( 
          "MaximumPasswordAging indicates the maximum amount of "
          "time that a password may be used before it is required "
          "to be changed.A value of NULL indicates that password "
          "aging is not supported.The value of this property shall "
          "be an interval and shall not be an explicit datetime." )]
   datetime MaximumPasswordAge;

      [Description ( 
          "ComplexPasswordRulesSupported indicates the rules for "
          "constructing a complex password supported by the Account.\n"
          "See CIM_Account.ComplexPasswordRulesEnforced for a "
          "description of each value." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "..", 
          "0x8000..0xFFFF" }, 
       Values { "Minimum Length", "Preclude User ID Inclusion", 
          "Maximum Repeating Characters", "Lower Case Alpha", 
          "Upper Case Alpha", "Numeric Character", 
          "Special Character", "DMTF Reserved", "Vendor Reserved" }]
   uint16 ComplexPasswordRulesSupported[];

      [Description ( 
          "DisableOnInactivity indicates whether disabling an "
          "account due to inactivity is supported." )]
   boolean DisableOnInactivity;


};
