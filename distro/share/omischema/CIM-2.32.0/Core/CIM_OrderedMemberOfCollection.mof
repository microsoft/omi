// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00707.002" type ="add">CPUBS corrections to CoreCollection.mof</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OrderedMemberOfCollection 
// ==================================================================
   [Association, Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "CIM_OrderedMemberOfCollection is an aggregation used to "
       "establish an ordered membership of ManagedElements in a "
       "Collection." )]
class CIM_OrderedMemberOfCollection : CIM_MemberOfCollection {

      [Description ( 
          "AssignedSequence is an unsigned integer \'n\' that "
          "indicates the relative position of members within a "
          "Collection. When \'n\' is a positive integer, it "
          "indicates a place in the sequence of members, with "
          "smaller integers indicating earlier positions in the "
          "sequence. The special value \'0\' indicates \'don\'t "
          "care\'. If two or more members have the same non-zero "
          "sequence number, then the ordering between those members "
          "is irrelevant, but they must all be ordered at the "
          "appropriate place in the overall sequence. \n"
          "\n"
          "A series of examples will make ordering of members "
          "clearer: \n"
          "If all members have the same sequence number, \n"
          "regardless of whether it is \'0\' or non-zero, any \n"
          "order is acceptable. \n"
          "o The values: \n"
          "1:MEMBER A \n"
          "2:MEMBER B \n"
          "1:MEMBER C \n"
          "3:MEMBER D \n"
          "indicate two acceptable orders: A,C,B,D or C,A,B,D, \n"
          "because A and C can be ordered in either sequence, but \n"
          "only at the \'1\' position. \n"
          "\n"
          "Note that the non-zero sequence numbers do not need to "
          "start with \'1\', and they do not need to be "
          "consecutive. However, the sequencenumbers must reflect "
          "their relative magnitude." )]
   uint64 AssignedSequence;


};
