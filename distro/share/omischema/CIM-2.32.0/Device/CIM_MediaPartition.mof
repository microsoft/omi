// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MediaPartition 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "A MediaPartition is a presentation of a contiguous range of "
       "logical blocks and has identifying data written on/to it. It "
       "may include a signature written by the OS or by an "
       "application. This class is a common superclass for Disk and "
       "TapePartions. Partitions are directly realized by Physical "
       "Media (indicated by the RealizesExtent association) or built "
       "on StorageVolumes (indicated by the BasedOn association)." )]
class CIM_MediaPartition : CIM_StorageExtent {

      [Description ( 
          "Boolean indicating that the Partition is labeled as "
          "bootable. (Note that this does not mean that an "
          "Operating System is actually loaded on the Partition.) "
          "With the advent of bootable Tape and other bootable "
          "media, this property is included in the higher level "
          "MediaPartition class, rather than in a subclass such as "
          "DiskPartition." )]
   boolean Bootable;

      [Description ( 
          "Boolean indicating that the Partition is available and "
          "may be allocated for use." )]
   boolean Allocatable;

      [Description ( 
          "An identifying string written to the Partition. "
          "Additional information related to this \'Signature\' may "
          "be found in the properties, SignatureState and "
          "SignatureAlgorithm." ), 
       ModelCorrespondence { "CIM_MediaPartition.SignatureState", 
          "CIM_MediaPartition.SignatureAlgorithm" }]
   string Signature;

      [Description ( 
          "A free-form string describing the algorithm used to "
          "define the Partition Signature. The value of this "
          "property is dependent on the Signature\'s State." ), 
       ModelCorrespondence { "CIM_MediaPartition.Signature", 
          "CIM_MediaPartition.SignatureState" }]
   string SignatureAlgorithm;

      [Description ( 
          "An enumeration describing the state of the Partition\'s "
          "identifying Signature string. Information such as "
          "\"Uninitialized\" (value=2), or \"Assigned by Owning "
          "Application\" (value=5) are possible entries." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Unimplemented", "Uninitialized", 
          "Calculated by Operating System", 
          "Calculated by a Media Manager", 
          "Assigned by Owning Application" }, 
       ModelCorrespondence { "CIM_MediaPartition.Signature", 
          "CIM_MediaPartition.SignatureAlgorithm" }]
   string SignatureState;

      [Description ( 
          "Boolean indicating that the Partition can be "
          "grown/extended without reformatting." )]
   boolean Extendable;


};
