// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.31.1" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "This class represents the PrintMarker component of a Printer "
       "(print device). It contains properties that describe the "
       "PrintMarker technology, capabilities, counters, and status. "
       "Note: A PrintMarker shall be associated with exactly one "
       "Printer via an instance of the PrinterComponent class. See: "
       "Model in section 2 of Printer MIB (RFC 3805)." ), 
    MappingStrings { "MIB.IETF|Printer-MIB.prtMarkerEntry" }]
class CIM_PrintMarker : CIM_PrinterElement {

      [Description ( 
          "Denotes whether or not this PrintMarker is the default "
          "PrintMarker for this Printer. If the default PrintMarker "
          "feature is not supported for this Printer, then this "
          "property shall be null. If the default PrintMarker "
          "feature is supported for this Printer, then this "
          "property shall be true for at most one instance of "
          "CIM_PrintMarker on this Printer, i.e., the default may "
          "not be currently configured." ), 
       MappingStrings { "MIB.IETF|Printer-MIB.prtMarkerDefaultIndex" }]
   boolean IsDefault;

      [Description ( 
          "The type of marking technology used for this PrintMarker." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", ".." }, 
       Values { "Other", "Unknown", "ElectrophotographicLED", 
          "ElectrophotographicLaser", "ElectrophotographicOther", 
          "ImpactMovingHeadDotMatrix9pin", 
          "ImpactMovingHeadDotMatrix24pin", 
          "ImpactMovingHeadDotMatrixOther", 
          "ImpactMovingHeadFullyFormed", "ImpactBand", 
          "ImpactOther", "InkjetAqueous", "InkjetSolid", 
          "InkjetOther", "Pen", "ThermalTransfer", 
          "ThermalSensitive", "ThermalDiffusion", "ThermalOther", 
          "Electroerosion", "Electrostatic", 
          "PhotographicMicrofiche", "PhotographicImagesetter", 
          "PhotographicOther", "IonDeposition", "EBeam", 
          "Typesetter", "DMTF Reserved" }, 
       MappingStrings { "MIB.IETF|Printer-MIB.prtMarkerMarkTech", 
          "MIB.IETF|IANA-PRINTER-MIB.PrtMarkerMarkTechTC" }, 
       ModelCorrespondence { 
          "CIM_PrintMarker.OtherMarkTechDescription" }]
   uint32 MarkTech;

      [Description ( 
          "A free-form string that describes the type of technology "
          "when the value of the MarkTech property is equal to 1, "
          "5, 11, 14, 19, or 24 (Other, ElectrophotographicOther, "
          "ImpactMovingHeadDotMatrixOther, ImpactOther, "
          "InkjetOther, ThermalOther, or PhotographicOther)." ), 
       MaxLen ( 255 ), 
       ModelCorrespondence { "CIM_PrintMarker.MarkTech" }]
   string OtherMarkTechDescription;

      [Description ( 
          "The unit that will be used by the Printer when reporting "
          "counter values for this PrintMarker. The time units of "
          "measure are provided for a PrintMarker like a strip "
          "recorder that does not or cannot track the physical "
          "dimensions of the media and does not use characters, "
          "lines or sheets." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "11", 
          "16", "17", ".." }, 
       Values { "Other", "Unknown", "TenThousandthsOfInches", 
          "Micrometers", "Characters", "Lines", "Impressions", 
          "Sheets", "DotRow", "Hours", "Feet", "Meters", 
          "DMTF Reserved" }, 
       MappingStrings { "MIB.IETF|Printer-MIB.prtMarkerCounterUnit", 
          "MIB.IETF|Printer-MIB.PrtMarkerCounterUnitTC" }, 
       ModelCorrespondence { "CIM_PrintMarker.OtherCounterUnit", 
          "CIM_PrintMarker.LifeCount", "CIM_PrintMarker.PowerOnCount" }]
   uint32 CounterUnit;

      [Description ( 
          "A free-form string that describes the counter unit when "
          "the value of the CounterUnit property is equal to 1 "
          "(Other)." ), 
       MaxLen ( 255 ), 
       ModelCorrespondence { "CIM_PrintMarker.CounterUnit", 
          "CIM_PrintMarker.LifeCount", "CIM_PrintMarker.PowerOnCount" }]
   string OtherCounterUnit;

      [Description ( 
          "The count of PrintMarker usage during the life of the "
          "Printer using units of measure as specified by "
          "CIM_PrintMarker.CounterUnit." ), 
       MappingStrings { "MIB.IETF|Printer-MIB.prtMarkerLifeCount", 
          "MIB.IETF|Printer-MIB.PrtMarkerCounterUnitTC" }, 
       ModelCorrespondence { "CIM_PrintMarker.CounterUnit", 
          "CIM_PrintMarker.OtherCounterUnit" }]
   uint32 LifeCount;

      [Description ( 
          "The count of PrintMarker usage since the equipment was "
          "most recently powered on using units of measure as "
          "specified by CIM_PrintMarker.CounterUnit." ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtMarkerPowerOnCount", 
          "MIB.IETF|Printer-MIB.PrtMarkerCounterUnitTC" }, 
       ModelCorrespondence { "CIM_PrintMarker.CounterUnit", 
          "CIM_PrintMarker.OtherCounterUnit" }]
   uint32 PowerOnCount;

      [Description ( 
          "The number of process colors supported by this "
          "PrintMarker. A process color of 1 implies monochrome. "
          "The value of this property and "
          "CIM_PrintMarker.SpotColorants cannot both be 0. The "
          "value of this property shall be 0 or greater." ), 
       MinValue ( 0 ), 
       MaxValue ( 65535 ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtMarkerProcessColorants" }, 
       ModelCorrespondence { "CIM_PrintSupply.ColorantRole" }]
   uint32 ProcessColorants;

      [Description ( 
          "The number of spot colors supported by this PrintMarker. "
          "The value of this property and "
          "CIMPrintMarker.ProcessColorants cannot both be 0. The "
          "value of this property shall be 0 or greater." ), 
       MinValue ( 0 ), 
       MaxValue ( 65535 ), 
       MappingStrings { "MIB.IETF|Printer-MIB.prtMarkerSpotColorants" }, 
       ModelCorrespondence { "CIM_PrintSupply.ColorantRole" }]
   uint32 SpotColorants;

      [Description ( 
          "This property contains detailed availability information "
          "for this PrintMarker, as follows: 1 (Other) means other "
          "detailed availability information is present in the "
          "OtherAvailabilityStatus property. 2 (Unknown) means "
          "detailed availability information for this PrintMarker "
          "is unknown. 3 (AvailableIdle) means this PrintMarker is "
          "available and idle, i.e., not currently in use. 4 "
          "(AvailableStandy) means this PrintMarker is available "
          "but on standby, e.g., in a power saving mode. 5 "
          "(AvailableActive) means this PrintMarker is available "
          "and active, i.e., currently in use. 6 (AvailableBusy) "
          "means this PrintMarker is available but busy, i.e., not "
          "immediately available for its primary function. 7 "
          "(UnavailableOnRequest) means this PrintMarker is not "
          "available and is on request, i.e., needs human "
          "intervention. 8 (UnavailableBroken) means this "
          "PrintMarker is not available and is broken, e.g., needs "
          "repair/replacement." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", ".." }, 
       Values { "Other", "Unknown", "AvailableIdle", 
          "AvailableStandby", "AvailableActive", "AvailableBusy", 
          "UnavailableOnRequest", "UnavailableBroken", 
          "DMTF Reserved" }, 
       MappingStrings { "MIB.IETF|Printer-MIB.PrtSubUnitStatusTC" }, 
       ModelCorrespondence { 
          "CIM_ManagedSystemElement.OperatingStatus", 
          "CIM_PrintMarker.OtherAvailabilityStatus" }]
   uint32 AvailabilityStatus;

      [Description ( 
          "A free-form string that describes the detailed "
          "availability of this PrintMarker when the value of the "
          "AvailabilityStatus property is equal to 1 (Other)." ), 
       MaxLen ( 255 ), 
       ModelCorrespondence { "CIM_PrintMarker.AvailabilityStatus" }]
   string OtherAvailabilityStatus;

      [Description ( 
          "If true, there are currently non-critical alerts on this "
          "PrintMarker." ), 
       MappingStrings { "MIB.IETF|Printer-MIB.PrtSubUnitStatusTC" }, 
       ModelCorrespondence { 
          "CIM_ManagedSystemElement.DetailedStatus" }]
   boolean NonCriticalAlertsPresent;

      [Description ( 
          "If true, there are currently critical alerts on this PrintMarker."
           ), 
       MappingStrings { "MIB.IETF|Printer-MIB.PrtSubUnitStatusTC" }, 
       ModelCorrespondence { 
          "CIM_ManagedSystemElement.DetailedStatus" }]
   boolean CriticalAlertsPresent;

      [Description ( 
          "The basis for the limit properties FeedAddressability "
          "and XFeedAddressability, that specifies whether "
          "meaningful values are available. 1 (Other) means the "
          "PrintMarker places no restrictions on addressability and "
          "FeedAddressability and XFeedAddressability shall be "
          "null. 2 (Unknown) means the PrintMarker does not have "
          "meaningful values and FeedAddressability and "
          "XFeedAddressability shall be null. 3 (Actual) means the "
          "PrintMarker does have meaningful values and "
          "FeedAddressability and XFeedAddressability shall be "
          "present." ), 
       ValueMap { "1", "2", "3", ".." }, 
       Values { "Other", "Unknown", "Actual", "DMTF Reserved" }, 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtMarkerFeedAddressability", 
          "MIB.IETF|Printer-MIB.prtMarkerXFeedAddressability" }, 
       ModelCorrespondence { "CIM_PrintMarker.FeedAddressability", 
          "CIM_PrintMarker.XFeedAddressability" }]
   uint16 AddressabilityBasis;

      [Description ( 
          "The maximum addressability (often called resolution) of "
          "this PrintMarker in dots per inch in the feed direction, "
          "i.e., long-edge in portrait feed mode." ), 
       MinValue ( 0 ), 
       MaxValue ( 2147483647 ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtMarkerFeedAddressability" }, 
       ModelCorrespondence { "CIM_PrintMarker.AddressabilityBasis", 
          "CIM_PrintMarker.XFeedAddressability" }, 
       Punit ( "dot / inch" )]
   uint32 FeedAddressability;

      [Description ( 
          "The maximum addressability (often called resolution) of "
          "this PrintMarker in dots per inch in the cross-feed "
          "direction, i.e., short-edge in portrait feed mode." ), 
       MinValue ( 0 ), 
       MaxValue ( 2147483647 ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtMarkerXFeedAddressability" }, 
       ModelCorrespondence { "CIM_PrintMarker.AddressabilityBasis", 
          "CIM_PrintMarker.FeedAddressability" }, 
       Punit ( "dot / inch" )]
   uint32 XFeedAddressability;


};
