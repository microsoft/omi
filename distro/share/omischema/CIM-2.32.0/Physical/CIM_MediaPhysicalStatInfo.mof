// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MediaPhysicalStatInfo 
// ==================================================================
   [Deprecated { "CIM_MediaPhysicalStatData" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Physical::StoragePackage" ), 
    Description ( 
       "Statistics related to reading physical labels and picks/puts "
       "at a specific StorageMediaLocation, or for a specific piece of "
       "PhysicalMedia. Although the same class is used to represent "
       "this data, at the instance level the object holds information "
       "for the Location (independent of the Media), OR for the Media "
       "(independent of its StorageMediaLocation). This class is "
       "deprecated in lieu of MediaPhysicalStatData, to take advantage "
       "of the simplified key structure defined there." )]
class CIM_MediaPhysicalStatInfo : CIM_PhysicalStatisticalInformation {

      [Deprecated { "CIM_MediaPhysicalStatData.ScanSuccesses" }, 
       Description ( 
          "The number of successful physical label scans." ), 
       Counter]
   uint64 ScanSuccesses;

      [Deprecated { "CIM_MediaPhysicalStatData.ScanFailures" }, 
       Description ( "The number of failed physical label scans." ), 
       Counter]
   uint64 ScanFailures;

      [Deprecated { "CIM_MediaPhysicalStatData.ScanRetries" }, 
       Description ( "The number of retried physical label scans." ), 
       Counter]
   uint64 ScanRetries;

      [Deprecated { "CIM_MediaPhysicalStatData.PickSuccesses" }, 
       Description ( "The number of successful picks." ), 
       Counter]
   uint64 PickSuccesses;

      [Deprecated { "CIM_MediaPhysicalStatData.PickFailures" }, 
       Description ( "The number of failed picks." ), 
       Counter]
   uint64 PickFailures;

      [Deprecated { "CIM_MediaPhysicalStatData.PickRetries" }, 
       Description ( "The number of retried picks." ), 
       Counter]
   uint64 PickRetries;

      [Deprecated { "CIM_MediaPhysicalStatData.PutSuccesses" }, 
       Description ( "The number of successful puts." ), 
       Counter]
   uint64 PutSuccesses;

      [Deprecated { "CIM_MediaPhysicalStatData.PutFailures" }, 
       Description ( "The number of failed puts." ), 
       Counter]
   uint64 PutFailures;

      [Deprecated { "CIM_MediaPhysicalStatData.PutRetries" }, 
       Description ( "The number of retried puts." ), 
       Counter]
   uint64 PutRetries;


      [Deprecated { "CIM_StatisticalData.ResetSelectedStats" }, 
       Description ( 
          "Method to reset the statistical counters. The method "
          "takes one parameter as input - an integer indicating "
          "which counter to reset. For this input parameter, 0 "
          "indicates all, 1-3 reset the scan-related counters, 4-6 "
          "reset the \'pick\'-related counters, and 7-9 reset the "
          "\'put\'-related counters. The method returns 0 if "
          "successful, 1 if not supported, and any other value if "
          "an error occurred. A method is specified so that the "
          "Element\'s instrumentation can also reset its internal "
          "processing and counters. The set of possible return "
          "codes should be specified in a ValueMap qualifier on the "
          "method. The strings to which the ValueMap contents are "
          "\'translated\' should be specified as a Values array "
          "qualifier on the method." )]
   uint32 ResetCounter(
         [IN, Description ( "The counter to reset." ), 
          ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", 
             "9" }, 
          Values { "All", "Scan Successes", "Scan Failures", 
             "Scan Retries", "Pick Successes", "Pick Failures", 
             "Pick Retries", "Put Successes", "Put Failures", 
             "Put Retries" }]
      uint16 SelectedCounter);

};
