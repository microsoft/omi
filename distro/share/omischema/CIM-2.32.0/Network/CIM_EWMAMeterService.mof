// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EWMAMeterService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This is a concrete subclass of the MeterService class that "
       "represents an exponentially weighted moving average meter. "
       "This meter is a simple low-pass filter that measures the rate "
       "of incoming packets over a small, fixed sampling interval. Any "
       "admitted packet that pushes the average rate over a "
       "pre-defined limit is defined to be non-conforming." )]
class CIM_EWMAMeterService : CIM_MeterService {

      [Description ( 
          "This property is a 32-bit unsigned integer that defines "
          "the average rate against which the sampled arrival rate "
          "of packets should be measured. Any packet that causes "
          "the sampled rate to exceed this rate is deemed "
          "non-conforming. The value is specified in kilobits per "
          "second." ), 
       Units ( "KiloBits Per Second" )]
   uint32 AverageRate;

      [Description ( 
          "This property is a 64-bit unsigned integer that defines "
          "the sampling interval used to measure the arrival rate. "
          "The calculated rate is averaged over this interval and "
          "checked against the AverageRate property. All packets "
          "whose computed average arrival rate is less than the "
          "AverageRate are deemed conforming. The value is "
          "specified in microseconds." ), 
       Units ( "MicroSeconds" )]
   uint64 DeltaInterval;

      [Description ( 
          "This property is a 32-bit unsigned integer representing "
          "the reciprocal of the time constant (e.g., frequency "
          "response) of what is essentially a simple low-pass "
          "filter. For example, the value 64 for this property "
          "represents a time constant value of 1/64." )]
   uint32 Gain;


};
