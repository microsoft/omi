// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConditioningService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "ConditioningService represents the ability to define how "
       "traffic is conditioned in the data-forwarding path of a "
       "device. The subclasses of ConditioningService define the "
       "particular types of conditioning that are done. These are the "
       "services performed by a classifier, a meter, a marker, a "
       "dropper, a queue, and a scheduler. Other, more sophisticated "
       "types of conditioning may be defined in the future. \n"
       "\n"
       "ConditioningService is a concrete class because its superclass "
       "(ForwardingService) is concrete. While this class can be "
       "instantiated, an instance of it does not accomplish anything, "
       "because the nature of the conditioning, and the parameters "
       "that control it, are specified only in the subclasses of "
       "ConditioningService. \n"
       "\n"
       "Two associations in which ConditioningService participates are "
       "critical to its usage in QoS - QoSConditioningSubService and "
       "NextService. QoSConditioningSubService aggregates "
       "ConditioningServices into a particular QoS service (such as "
       "AF), to describe the specific conditioning functionality that "
       "underlies that QoSService in a particular device. NextService "
       "indicates the subsequent conditioning service(s) for different "
       "traffic streams." )]
class CIM_ConditioningService : CIM_Service {

      [Deprecated { "CIM_EnabledLogicalElement.EnabledState" }, 
       Description ( 
          "This property is a boolean that, if TRUE, signifies that "
          "one or more conditioning functions can be performed on "
          "traffic encountered by this ConditioningService. This "
          "allows one or more ConditioningServices to be enabled or "
          "disabled to provide different types of conditioning for "
          "traffic. Enabled is deprecated in lieu of a similar (but "
          "more generally and completely defined) property which is "
          "inherited." )]
   boolean Enabled;


};
