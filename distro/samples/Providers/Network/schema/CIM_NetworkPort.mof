// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_NetworkPort
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "NetworkPort is the logical representation of network "
       "communications hardware such as a physical connector and the "
       "setup or operation of the network chips, at the lowest layers "
       "of a network stack." )]
class CIM_NetworkPort : CIM_LogicalPort {

      [Override ( "Speed" ), 
       Description ( 
          "The current bandwidth of the Port in Bits per Second. "
          "For ports that vary in bandwidth or for those where no "
          "accurate estimation can be made, this property should "
          "contain the nominal bandwidth." ), 
       Units ( "Bits per Second" ), 
       MappingStrings { "MIB.IETF|MIB-II.ifSpeed", 
          "MIF.DMTF|Network Adapter 802 Port|001.5" }, 
       PUnit ( "bit / second" )]
   uint64 Speed;

      [Deprecated { "CIM_NetworkPort.OtherPortType" }, 
       Description ( 
          "Note: The use of this property is deprecated in lieu of "
          "CIM_LogicalPort.PortType. \n"
          "Deprecated description: The type of module, when "
          "PortType is set to 1 (\"Other\".)" ), 
       ModelCorrespondence { "CIM_LogicalPort.PortType" }]
   string OtherNetworkPortType;

      [Description ( 
          "NetworkPorts are often numbered relative to either a "
          "logical module or a network element." )]
   uint16 PortNumber;

      [Description ( 
          "An enumeration of the types of links. When set to 1 "
          "(\"Other\"), the related property OtherLinkTechnology "
          "contains a string description of the type of link." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "Unknown", "Other", "Ethernet", "IB", "FC", "FDDI", 
          "ATM", "Token Ring", "Frame Relay", "Infrared", 
          "BlueTooth", "Wireless LAN" }, 
       ModelCorrespondence { "CIM_NetworkPort.OtherLinkTechnology" }]
   uint16 LinkTechnology;

      [Description ( 
          "A string value that describes LinkTechnology when it is "
          "set to 1, \"Other\"." ), 
       ModelCorrespondence { "CIM_NetworkPort.LinkTechnology" }]
   string OtherLinkTechnology;

      [Description ( 
          "PermanentAddress defines the network address that is "
          "hardcoded into a port. This \'hardcoded\' address can be "
          "changed using a firmware upgrade or a software "
          "configuration. When this change is made, the field "
          "should be updated at the same time. PermanentAddress "
          "should be left blank if no \'hardcoded\' address exists "
          "for the NetworkAdapter." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|Network Adapter 802 Port|001.2" }]
   string PermanentAddress;

      [Description ( 
          "An array of strings that indicates the network addresses "
          "for the port." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|Network Adapter 802 Port|001.3" }]
   string NetworkAddresses[];

      [Description ( 
          "Boolean that indicates that the port is operating in "
          "full duplex mode." )]
   boolean FullDuplex;

      [Description ( 
          "A Boolean that indicates whether the NetworkPort is "
          "capable of automatically determining the speed or other "
          "communications characteristics of the attached network "
          "media." )]
   boolean AutoSense;

      [Description ( 
          "The maximum transmission unit (MTU) that can be supported."
           ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint64 SupportedMaximumTransmissionUnit;

      [Description ( 
          "The active or negotiated maximum transmission unit (MTU) "
          "that can be supported." ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint64 ActiveMaximumTransmissionUnit;


};
