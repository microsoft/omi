class Numbers
{
        sint64 numbers[];
        uint32 count;                        
};

class NumbersTask
{
        [static] uint32 NewNumber([in] sint64 newDigits[], [out, EmbeddedInstance("Numbers")] string newNum);
};

[Description("Simple Method Provider for testing methods. This provider will test only static methods.")]
class TestClass_MethodProvider_Calc
{
        [static] 
        uint64 Add([in]sint64 Left, [in] sint64 Right, [out] sint64 sum);
        
        [static, MaxValue(0xFFFF)] 
        sint64 Subtract([in]sint64 Left, [in] sint64 Right, [out] sint64 difference);

        [static] 
        sint64 Divide([in, MaxValue(0x7FFFFFFFFFFFFFFF)]sint64 Numerator, [in, MinValue(1)] sint64 Denominator, [out] sint64 quotient);                

        [static,
         DisplayName("Mult"),
         Description (" A method to multiply numbers" ) ] 
        uint64 Multiply([in] uint64 Left, [in] uint64 Right, [out] sint64 product);

        [static] 
        uint32 AddNumbers([EmbeddedInstance("Numbers")] string numbers, [out] sint64 sum);

        [static]
        uint32 PrimeFactors([in] uint64 number, [out, EmbeddedInstance("Numbers")] string factors);

        [static] 
        uint64 HardError([in] boolean postError, [in] uint16 perceivedSeverity);
};




