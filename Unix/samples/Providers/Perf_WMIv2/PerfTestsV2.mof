#pragma include ("cim_schema_2.24.1.mof")

class Perf_Embedded
{
	[key] uint16 v_embeddedKey;
	string v_string;
};

//arrays will have 5 values each.
class Perf_WithPsSemantics
{
	sint8 v_sint8[];
	uint16 v_uint16;
	sint32 v_sint32[];
	[key] uint64 v_uint64_key;
	string v_string[];
	boolean v_boolean;
	real32 v_real32[];
	real64 v_real64;
	datetime v_datetime[];
	char16 v_char16;
	[EmbeddedInstance("Perf_Embedded")] string v_embedded;

	//PS semantics flags is a bit map of PSS_WRITE_VERBOSE, PSS_WRITE_DEBUG, PSS_WRITE_WARNING, PSS_WRITE_ERROR, PSS_WRITE_PROGRESS, PSS_SHOULD_PROCESS 
	[static] uint32 SetBehaviour([in] uint32 maxInstances, [in] uint32 streamInstances, [in] uint32 psSemanticsFlags, [in] uint32 psSemanticsCount);
	[static] uint32 PingBackParameters([in, EmbeddedInstance("Perf_Embedded")] string inbound, [out, EmbeddedInstance("Perf_Embedded")] string outbound);
	[static] uint32 streamingInstances([out, stream, EmbeddedInstance("Perf_WithPsSemantics")] string instances[]); 
	[static] uint32 streamingPrimitive([out, stream] uint32 numbers[]); 
};

//arrays will have 5 values each.
class Perf_NoPsSemantics
{
	sint8 v_sint8[];
	uint16 v_uint16;
	sint32 v_sint32[];
	[key] uint64 v_uint64_key;
	string v_string[];
	boolean v_boolean;
	real32 v_real32[];
	real64 v_real64;
	datetime v_datetime[];
	char16 v_char16;
	[EmbeddedInstance("Perf_Embedded")] string v_embedded;

	[static] uint32 SetBehaviour([in] uint32 maxInstances, [in] uint32 streamInstances, [in] uint32 psSemanticsFlags, [in] uint32 psSemanticsCount, [in] boolean enablePostNumberInstances);
	
	// these will not be implemented.They are here to keep the schema same.
	[static] uint32 PingBackParameters([in, EmbeddedInstance("Perf_Embedded")] string inbound, [out, EmbeddedInstance("Perf_Embedded")] string outbound);
	[static] uint32 streamingInstances([out, stream, EmbeddedInstance("Perf_WithPsSemantics")] string instances[]); 
	[static] uint32 streamingPrimitive([out, stream] uint32 numbers[]); 
	[static] uint32 GetNumberPostedInstances([out] uint32 numberInstances);
	[static] uint32 StopPosting();
};

[Indication]
class Perf_Indication : CIM_Indication
{
	sint8 v_sint8[];
	uint16 v_uint16;
	sint32 v_sint32[];
	[key] uint64 v_uint64_key;
	string v_string[];
	boolean v_boolean;
	real32 v_real32[];
	real64 v_real64;
	datetime v_datetime[];
	char16 v_char16;
	[EmbeddedInstance("Perf_Embedded")] string v_embedded;
};

[Association]
class PerfAssocClass
{
	[key] Perf_WithPsSemantics ref antecedent;
	[key] Perf_NoPsSemantics ref dependent;
};

