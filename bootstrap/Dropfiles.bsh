#!/bin/bash
# // Copyright (c) Microsoft Corporation.  All rights reserved. 
# Uses smbclient to move results of build to drop location.  
#
# Usage: Dropfile.bsh DropDestination [ -all | -file filename ] FolderToDrop 
# DKB 2008/06/05
#
# Potential Enhancements: 
# Would like to make this rely on an nfs file system rather than using smbclient: 
# would greatly simplify this script, eliminate the need for username password in 
# this script, at the expense of having to make sure that the drop folder file 
# system is mounted when the build system is started. 
#

. ~/.bash_profile  # Don't assume Bash_profile has been run!

# Seems like I should look into standard bash script command line parsing, rather than
# inventing it myself. . DKB 2008/06/05
ScriptName=${0}
FolderToDrop=${1}    # Path to the folder to be dropped from ~. 
FileToDrop=${2}      # This can be * for all folders or an individual file name. 

if [ "_${FolderToDrop}" == "_" ]; then
    echo ${ScriptName} : SCRIPT ERROR: FolderToDrop not specified.
    exit 1
fi

if [ "_${FileToDrop}" == "_" ]; then
    echo ${ScriptName} : SCRIPT ERROR: FileToDrop not specified.
    exit 1
else

  if [ "${FileToDrop}" == "-all" ]; then
    echo ${ScriptName} : Drop all files in folder
    DropDestination=${3}
  else

    if [ "${FileToDrop}" == "-file" ]; then
      FileToDrop=${3}
      DropDestination=${4}
      echo ${ScriptName} : Drop all files in folder
    else
      echo ${ScriptName} : SCRIPT ERROR: Invalide Drop Specifier: ${FileToDrop}
    fi
  fi
fi

if [ "_${DropDestination}" == "_" ]; then
    echo ${ScriptName} : SCRIPT ERROR: DropDestination not specified.
    exit 1
fi

echo "===================================="
TheDate=`date`
echo ${ScriptName} : Starting : ${TheDate}

echo ${ScriptName} :    FolderToDrop: ${FolderToDrop}
echo ${ScriptName} :      FileToDrop: ${FileToDrop}
echo ${ScriptName} : DropDestination: ${DropDestination}

DropShare=`echo ${DropDestination} | sed 's|/\([^/][^/]*/[^/][^/]*\)/\(.*\)|\1|'`
DropShare="//${DropShare}"  # Put the // back in for smbclient...
DropFolder=`echo ${DropDestination} | sed 's|/\([^/][^/]*/[^/][^/]*\)/\(.*\)|\2|'`

cd ~/${FolderToDrop} || {
    echo ${ScriptName} : SCRIPT ERROR: FolderToDrop not found: failed cd ~/${FolderToDrop}
    exit 1
}

SmbClientOutfile=~/${ScriptName}.smbclient.$$.log

echo ${ScriptName} : Copying ${FolderToDrop}/"${FileToDrop}" to  ${DropFolder} on Share ${DropShare}

if [ "${FileToDrop}" == "-all" ]; then 
  smbclientCmd='smbclient ${DropShare} -U scxsvc%"OrangeKitten135!" -W Redmond -c "prompt;recurse;cd '${DropFolder}';mput *"'
else
  # not sure if this condition has been tested!!
  smbclientCmd='smbclient ${DropShare} -U scxsvc%"OrangeKitten135!" -W Redmond -c "prompt;recurse;cd '${DropFolder}';mput ${FileToDrop}"'
fi

# echo ${ScriptName} : running : ${smbclientCmd}# DOn't print out the line in general because it has access password... 
echo ${ScriptName} :  smbclient output going to ${SmbClientOutfile} 

eval $smbclientCmd  > ${SmbClientOutfile} 2>&1

retval=$?
echo ${ScriptName} : smbclient retval: ${retval}
if (( ${retval} != 0 )); then
   echo ${ScriptName} : SCRIPT ERROR : smbclient retval: ${retval}
   exit 1
fi
echo ${ScriptName} : smbclient successful completion

TheDate=`date`
echo ${ScriptName} : Complete: ${TheDate}
if (( ${retval} != 0 )); then
  echo ${ScriptName} : Exiting 1
  exit 1
fi
echo ${ScriptName} : Exiting 0
exit 0

